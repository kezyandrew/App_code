/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ElementRef } from '@angular/core';
/**
 * Default values for Component Input
 * @type {?}
 */
export const DEFAULTS = {
    target: null,
    action: 'click',
    duration: 650,
    easing: 'easeInOutQuad',
    offset: 0,
    offsetMap: new Map()
};
const ɵ0 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time * time;
}, ɵ1 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time * (2 - time);
}, ɵ2 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time < 0.5 ? 2 * time * time : -1 + (4 - 2 * time) * time;
}, ɵ3 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time * time * time;
}, ɵ4 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return (--time) * time * time + 1;
}, ɵ5 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;
}, ɵ6 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time * time * time * time;
}, ɵ7 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return 1 - (--time) * time * time * time;
}, ɵ8 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time < 0.5 ? 8 * time * time * time * time : 1 - 8 * (--time) * time * time * time;
}, ɵ9 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time * time * time * time * time;
}, ɵ10 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return 1 + (--time) * time * time * time * time;
}, ɵ11 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return time < 0.5 ? 16 * time * time * time * time * time : 1 + 16 * (--time) * time * time * time * time;
}, ɵ12 = /**
 * @param {?} time
 * @return {?}
 */
(time) => {
    return Math.pow(2, -10 * time) * Math.sin((time - 1 / 4) * (2 * Math.PI) / 1) + 1;
};
/**
 * Easing Colleciton
 * @type {?}
 */
export const EASING = {
    easeInQuad: (ɵ0),
    easeOutQuad: (ɵ1),
    easeInOutQuad: (ɵ2),
    easeInCubic: (ɵ3),
    easeOutCubic: (ɵ4),
    easeInOutCubic: (ɵ5),
    easeInQuart: (ɵ6),
    easeOutQuart: (ɵ7),
    easeInOutQuart: (ɵ8),
    easeInQuint: (ɵ9),
    easeOutQuint: (ɵ10),
    easeInOutQuint: (ɵ11),
    easeOutElastic: (ɵ12)
};
/**
 * Set of allowed events as triggers
 * for the Animation to start.
 * @type {?}
 */
export const EVENTS = [
    'click',
    'mouseenter',
    'mouseover',
    'mousedown',
    'mouseup',
    'dblclick',
    'contextmenu',
    'wheel',
    'mouseleave',
    'mouseout'
];
/**
 * Strip hash (#) from value.
 *
 * @param {?} value 				The given string value
 * @return {?} 					The stripped string value
 */
export function stripHash(value) {
    return value.substring(0, 1) === '#' ? value.substring(1) : value;
}
/**
 * Test if a given value is a string.
 *
 * @param {?} value 					The given value
 * @return {?} 						Whether the given value is a string
 */
export function isString(value) {
    return typeof value === 'string' || value instanceof String;
}
/**
 * Test if a given Element is the Window.
 *
 * @param {?} container 				The given Element
 * @return {?} 						Whether the given Element is Window
 */
export function isWindow(container) {
    return container === window;
}
/**
 * Test if a given value is of type ElementRef.
 *
 * @param {?} value 					The given value
 * @return {?} Whether the given value is a number
 */
export function isElementRef(value) {
    return value instanceof ElementRef;
}
/**
 * Whether or not the given value is a Native Element.
 *
 * @param {?} value           The given value
 * @return {?} Whether or not the value is a Native Element
 */
export function isNativeElement(value) {
    return value instanceof HTMLElement;
}
/**
 * Test if a given value is type number.
 *
 * @param {?} value 					The given value
 * @return {?} 						Whether the given value is a number
 */
export function isNumber(value) {
    return !isNaN(parseFloat(value)) && isFinite(value);
}
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11, ɵ12 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLXRvLWhlbHBlcnMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmlja3ktbGVuYWVycy9uZ3gtc2Nyb2xsLXRvLyIsInNvdXJjZXMiOlsibGliL3Njcm9sbC10by1oZWxwZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQU0zQyxNQUFNLE9BQU8sUUFBUSxHQUFpQztJQUNwRCxNQUFNLEVBQUUsSUFBSTtJQUNaLE1BQU0sRUFBRSxPQUFPO0lBQ2YsUUFBUSxFQUFFLEdBQUc7SUFDYixNQUFNLEVBQUUsZUFBZTtJQUN2QixNQUFNLEVBQUUsQ0FBQztJQUNULFNBQVMsRUFBRSxJQUFJLEdBQUcsRUFBRTtDQUNyQjs7Ozs7QUFJYSxDQUFDLElBQVksRUFBRSxFQUFFO0lBQzNCLE9BQU8sSUFBSSxHQUFHLElBQUksQ0FBQztBQUNyQixDQUFDOzs7O0FBQ1ksQ0FBQyxJQUFZLEVBQUUsRUFBRTtJQUM1QixPQUFPLElBQUksR0FBRyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztBQUMzQixDQUFDOzs7O0FBQ2MsQ0FBQyxJQUFZLEVBQUUsRUFBRTtJQUM5QixPQUFPLElBQUksR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBQ25FLENBQUM7Ozs7QUFDWSxDQUFDLElBQVksRUFBRSxFQUFFO0lBQzVCLE9BQU8sSUFBSSxHQUFHLElBQUksR0FBRyxJQUFJLENBQUM7QUFDNUIsQ0FBQzs7OztBQUNhLENBQUMsSUFBWSxFQUFFLEVBQUU7SUFDN0IsT0FBTyxDQUFDLEVBQUUsSUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLElBQUksR0FBRyxDQUFDLENBQUM7QUFDcEMsQ0FBQzs7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QUFDLEVBQUUsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDcEUsQ0FBQzs7Ozs7OztBQVFELE1BQU0sVUFBVSxRQUFRLENBQUMsS0FBVTtJQUNqQyxPQUFPLE9BQU8sS0FBSyxLQUFLLFFBQVEsSUFBSSxLQUFLLFlBQVksTUFBTSxDQUFDO0FBQzlELENBQUM7Ozs7Ozs7QUFRRCxNQUFNLFVBQVUsUUFBUSxDQUFDLFNBQWM7SUFDckMsT0FBTyxTQUFTLEtBQUssTUFBTSxDQUFDO0FBQzlCLENBQUM7Ozs7Ozs7QUFRRCxNQUFNLFVBQVUsWUFBWSxDQUFDLEtBQVU7SUFDckMsT0FBTyxLQUFLLFlBQVksVUFBVSxDQUFDO0FBQ3JDLENBQUM7Ozs7Ozs7QUFRRCxNQUFNLFVBQVUsZUFBZSxDQUFDLEtBQVU7SUFDeEMsT0FBTyxLQUFLLFlBQVksV0FBVyxDQUFDO0FBQ3RDLENBQUM7Ozs7Ozs7QUFRRCxNQUFNLFVBQVUsUUFBUSxDQUFDLEtBQVU7SUFDakMsT0FBTyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDdEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IFNjcm9sbFRvQW5pbWF0aW9uRWFzaW5nQ29sbGVjdGlvbiB9IGZyb20gJy4vc2Nyb2xsLXRvLWVhc2luZy5pbnRlcmZhY2UnO1xyXG5pbXBvcnQgeyBTY3JvbGxUb0RlZmF1bHRDb25maWdPcHRpb25zIH0gZnJvbSAnLi9zY3JvbGwtdG8tY29uZmlnLmludGVyZmFjZSc7XHJcblxyXG4vKiogRGVmYXVsdCB2YWx1ZXMgZm9yIENvbXBvbmVudCBJbnB1dCAqL1xyXG5leHBvcnQgY29uc3QgREVGQVVMVFM6IFNjcm9sbFRvRGVmYXVsdENvbmZpZ09wdGlvbnMgPSB7XHJcbiAgdGFyZ2V0OiBudWxsLFxyXG4gIGFjdGlvbjogJ2NsaWNrJyxcclxuICBkdXJhdGlvbjogNjUwLFxyXG4gIGVhc2luZzogJ2Vhc2VJbk91dFF1YWQnLFxyXG4gIG9mZnNldDogMCxcclxuICBvZmZzZXRNYXA6IG5ldyBNYXAoKVxyXG59O1xyXG5cclxuLyoqIEVhc2luZyBDb2xsZWNpdG9uICovXHJcbmV4cG9ydCBjb25zdCBFQVNJTkc6IFNjcm9sbFRvQW5pbWF0aW9uRWFzaW5nQ29sbGVjdGlvbiA9IHtcclxuICBlYXNlSW5RdWFkOiAodGltZTogbnVtYmVyKSA9PiB7XHJcbiAgICByZXR1cm4gdGltZSAqIHRpbWU7XHJcbiAgfSxcclxuICBlYXNlT3V0UXVhZDogKHRpbWU6IG51bWJlcikgPT4ge1xyXG4gICAgcmV0dXJuIHRpbWUgKiAoMiAtIHRpbWUpO1xyXG4gIH0sXHJcbiAgZWFzZUluT3V0UXVhZDogKHRpbWU6IG51bWJlcikgPT4ge1xyXG4gICAgcmV0dXJuIHRpbWUgPCAwLjUgPyAyICogdGltZSAqIHRpbWUgOiAtMSArICg0IC0gMiAqIHRpbWUpICogdGltZTtcclxuICB9LFxyXG4gIGVhc2VJbkN1YmljOiAodGltZTogbnVtYmVyKSA9PiB7XHJcbiAgICByZXR1cm4gdGltZSAqIHRpbWUgKiB0aW1lO1xyXG4gIH0sXHJcbiAgZWFzZU91dEN1YmljOiAodGltZTogbnVtYmVyKSA9PiB7XHJcbiAgICByZXR1cm4gKC0tdGltZSkgKiB0aW1lICogdGltZSArIDE7XHJcbiAgfSxcclxuICBlYXNlSW5PdXRDdWJpYzogKHRpbWU6IG51bWJlcikgPT4ge1xyXG4gICAgcmV0dXJuIHRpbWUgPCAwLjUgPyA0ICogdGltZSAqIHRpbWUgKiB0aW1lIDogKHRpbWUgLSAxKSAqICgyICogdGltZSAtIDIpICogKDIgKiB0aW1lIC0gMikgKyAxO1xyXG4gIH0sXHJcbiAgZWFzZUluUXVhcnQ6ICh0aW1lOiBudW1iZXIpID0+IHtcclxuICAgIHJldHVybiB0aW1lICogdGltZSAqIHRpbWUgKiB0aW1lO1xyXG4gIH0sXHJcbiAgZWFzZU91dFF1YXJ0OiAodGltZTogbnVtYmVyKSA9PiB7XHJcbiAgICByZXR1cm4gMSAtICgtLXRpbWUpICogdGltZSAqIHRpbWUgKiB0aW1lO1xyXG4gIH0sXHJcbiAgZWFzZUluT3V0UXVhcnQ6ICh0aW1lOiBudW1iZXIpID0+IHtcclxuICAgIHJldHVybiB0aW1lIDwgMC41ID8gOCAqIHRpbWUgKiB0aW1lICogdGltZSAqIHRpbWUgOiAxIC0gOCAqICgtLXRpbWUpICogdGltZSAqIHRpbWUgKiB0aW1lO1xyXG4gIH0sXHJcbiAgZWFzZUluUXVpbnQ6ICh0aW1lOiBudW1iZXIpID0+IHtcclxuICAgIHJldHVybiB0aW1lICogdGltZSAqIHRpbWUgKiB0aW1lICogdGltZTtcclxuICB9LFxyXG4gIGVhc2VPdXRRdWludDogKHRpbWU6IG51bWJlcikgPT4ge1xyXG4gICAgcmV0dXJuIDEgKyAoLS10aW1lKSAqIHRpbWUgKiB0aW1lICogdGltZSAqIHRpbWU7XHJcbiAgfSxcclxuICBlYXNlSW5PdXRRdWludDogKHRpbWU6IG51bWJlcikgPT4ge1xyXG4gICAgcmV0dXJuIHRpbWUgPCAwLjUgPyAxNiAqIHRpbWUgKiB0aW1lICogdGltZSAqIHRpbWUgKiB0aW1lIDogMSArIDE2ICogKC0tdGltZSkgKiB0aW1lICogdGltZSAqIHRpbWUgKiB0aW1lO1xyXG4gIH0sXHJcbiAgZWFzZU91dEVsYXN0aWM6ICh0aW1lOiBudW1iZXIpID0+IHtcclxuICAgIHJldHVybiBNYXRoLnBvdygyLCAtMTAgKiB0aW1lKSAqIE1hdGguc2luKCh0aW1lIC0gMSAvIDQpICogKDIgKiBNYXRoLlBJKSAvIDEpICsgMTtcclxuICB9XHJcbn07XHJcblxyXG4vKipcclxuICogU2V0IG9mIGFsbG93ZWQgZXZlbnRzIGFzIHRyaWdnZXJzXHJcbiAqIGZvciB0aGUgQW5pbWF0aW9uIHRvIHN0YXJ0LlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEVWRU5UUzogc3RyaW5nW10gPSBbXHJcbiAgJ2NsaWNrJyxcclxuICAnbW91c2VlbnRlcicsXHJcbiAgJ21vdXNlb3ZlcicsXHJcbiAgJ21vdXNlZG93bicsXHJcbiAgJ21vdXNldXAnLFxyXG4gICdkYmxjbGljaycsXHJcbiAgJ2NvbnRleHRtZW51JyxcclxuICAnd2hlZWwnLFxyXG4gICdtb3VzZWxlYXZlJyxcclxuICAnbW91c2VvdXQnXHJcbl07XHJcblxyXG4vKipcclxuICogU3RyaXAgaGFzaCAoIykgZnJvbSB2YWx1ZS5cclxuICpcclxuICogQHBhcmFtIHZhbHVlIFx0XHRcdFx0VGhlIGdpdmVuIHN0cmluZyB2YWx1ZVxyXG4gKiBAcmV0dXJucyBcdFx0XHRcdFx0VGhlIHN0cmlwcGVkIHN0cmluZyB2YWx1ZVxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHN0cmlwSGFzaCh2YWx1ZTogc3RyaW5nKTogc3RyaW5nIHtcclxuICByZXR1cm4gdmFsdWUuc3Vic3RyaW5nKDAsIDEpID09PSAnIycgPyB2YWx1ZS5zdWJzdHJpbmcoMSkgOiB2YWx1ZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFRlc3QgaWYgYSBnaXZlbiB2YWx1ZSBpcyBhIHN0cmluZy5cclxuICpcclxuICogQHBhcmFtIHZhbHVlIFx0XHRcdFx0XHRUaGUgZ2l2ZW4gdmFsdWVcclxuICogQHJldHVybnMgXHRcdFx0XHRcdFx0V2hldGhlciB0aGUgZ2l2ZW4gdmFsdWUgaXMgYSBzdHJpbmdcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBpc1N0cmluZyh2YWx1ZTogYW55KTogdmFsdWUgaXMgc3RyaW5nIHtcclxuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyB8fCB2YWx1ZSBpbnN0YW5jZW9mIFN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIFRlc3QgaWYgYSBnaXZlbiBFbGVtZW50IGlzIHRoZSBXaW5kb3cuXHJcbiAqXHJcbiAqIEBwYXJhbSBjb250YWluZXIgXHRcdFx0XHRUaGUgZ2l2ZW4gRWxlbWVudFxyXG4gKiBAcmV0dXJucyBcdFx0XHRcdFx0XHRXaGV0aGVyIHRoZSBnaXZlbiBFbGVtZW50IGlzIFdpbmRvd1xyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzV2luZG93KGNvbnRhaW5lcjogYW55KTogY29udGFpbmVyIGlzIFdpbmRvdyB7XHJcbiAgcmV0dXJuIGNvbnRhaW5lciA9PT0gd2luZG93O1xyXG59XHJcblxyXG4vKipcclxuICogVGVzdCBpZiBhIGdpdmVuIHZhbHVlIGlzIG9mIHR5cGUgRWxlbWVudFJlZi5cclxuICpcclxuICogQHBhcmFtIHZhbHVlIFx0XHRcdFx0XHRUaGUgZ2l2ZW4gdmFsdWVcclxuICogQHJldHVybnMgICAgICAgICAgICAgICBXaGV0aGVyIHRoZSBnaXZlbiB2YWx1ZSBpcyBhIG51bWJlclxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIGlzRWxlbWVudFJlZih2YWx1ZTogYW55KTogdmFsdWUgaXMgRWxlbWVudFJlZiB7XHJcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgRWxlbWVudFJlZjtcclxufVxyXG5cclxuLyoqXHJcbiAqIFdoZXRoZXIgb3Igbm90IHRoZSBnaXZlbiB2YWx1ZSBpcyBhIE5hdGl2ZSBFbGVtZW50LlxyXG4gKlxyXG4gKiBAcGFyYW0gdmFsdWUgICAgICAgICAgIFRoZSBnaXZlbiB2YWx1ZVxyXG4gKiBAcmV0dXJucyAgICAgICAgICAgICAgIFdoZXRoZXIgb3Igbm90IHRoZSB2YWx1ZSBpcyBhIE5hdGl2ZSBFbGVtZW50XHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOYXRpdmVFbGVtZW50KHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBIVE1MRWxlbWVudCB7XHJcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUZXN0IGlmIGEgZ2l2ZW4gdmFsdWUgaXMgdHlwZSBudW1iZXIuXHJcbiAqXHJcbiAqIEBwYXJhbSB2YWx1ZSBcdFx0XHRcdFx0VGhlIGdpdmVuIHZhbHVlXHJcbiAqIEByZXR1cm5zIFx0XHRcdFx0XHRcdFdoZXRoZXIgdGhlIGdpdmVuIHZhbHVlIGlzIGEgbnVtYmVyXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gaXNOdW1iZXIodmFsdWU6IGFueSk6IHZhbHVlIGlzIG51bWJlciB7XHJcbiAgcmV0dXJuICFpc05hTihwYXJzZUZsb2F0KHZhbHVlKSkgJiYgaXNGaW5pdGUodmFsdWUpO1xyXG59XHJcbiJdfQ==
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ngx-skeleton-loader', ['exports', '@angular/core', '@angular/common'], factory) :
    (global = global || self, factory(global['ngx-skeleton-loader'] = {}, global.ng.core, global.ng.common));
}(this, (function (exports, core, common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxSkeletonLoaderComponent = /** @class */ (function () {
        function NgxSkeletonLoaderComponent() {
            this.count = 1;
            this.appearance = '';
            this.theme = {};
            this.styles = {};
            this.items = [];
        }
        /**
         * @return {?}
         */
        NgxSkeletonLoaderComponent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.styles = this.theme || {};
            this.items.length = this.count;
        };
        NgxSkeletonLoaderComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'ngx-skeleton-loader',
                        template: "<span\n  *ngFor=\"let item of items\"\n  class=\"loader\"\n  [ngClass]=\"{ circle: appearance === 'circle' }\"\n  [ngStyle]=\"styles\"\n>\n</span>\n",
                        styles: [".loader{box-sizing:border-box;overflow:hidden;position:relative;-webkit-animation:2s ease-in-out infinite progress;animation:2s ease-in-out infinite progress;background:0 0/200px 100% no-repeat #eff1f6;background-image:-webkit-gradient(linear,left top,right top,from(rgba(255,255,255,0)),color-stop(rgba(255,255,255,.6)),to(rgba(255,255,255,0)));background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0));border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px}.loader:after,.loader:before{box-sizing:border-box}.loader.circle{width:40px;height:40px;margin:5px;border-radius:50%}@-webkit-keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}@keyframes progress{0%{background-position:-200px 0}100%{background-position:calc(200px + 100%) 0}}"]
                    }] }
        ];
        NgxSkeletonLoaderComponent.propDecorators = {
            count: [{ type: core.Input }],
            appearance: [{ type: core.Input }],
            theme: [{ type: core.Input }]
        };
        return NgxSkeletonLoaderComponent;
    }());
    if (false) {
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.count;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.appearance;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.theme;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.styles;
        /** @type {?} */
        NgxSkeletonLoaderComponent.prototype.items;
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var NgxSkeletonLoaderModule = /** @class */ (function () {
        function NgxSkeletonLoaderModule() {
        }
        NgxSkeletonLoaderModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [NgxSkeletonLoaderComponent],
                        imports: [common.CommonModule],
                        exports: [NgxSkeletonLoaderComponent],
                    },] }
        ];
        return NgxSkeletonLoaderModule;
    }());

    exports.NgxSkeletonLoaderComponent = NgxSkeletonLoaderComponent;
    exports.NgxSkeletonLoaderModule = NgxSkeletonLoaderModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-skeleton-loader.umd.js.map

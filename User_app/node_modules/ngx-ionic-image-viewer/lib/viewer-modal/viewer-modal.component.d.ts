import { OnInit } from '@angular/core';
import { ModalController, IonSlides } from '@ionic/angular';
import * as ɵngcc0 from '@angular/core';
export declare class ViewerModalComponent implements OnInit {
    private modalController;
    alt?: string;
    scheme?: string;
    slideOptions?: object;
    src: string;
    srcFallback?: string;
    srcHighRes?: string;
    swipeToClose?: boolean;
    text?: string;
    title?: string;
    titleSize?: string;
    defaultSlideOptions: {
        centeredSlides: boolean;
        passiveListeners: boolean;
        zoom: {
            enabled: boolean;
        };
    };
    options: {};
    swipeState: {
        phase: string;
        direction: string;
        swipeType: string;
        startX: number;
        startY: number;
        distance: number;
        distanceX: number;
        distanceY: number;
        threshold: number;
        restraint: number;
        allowedTime: number;
        elapsedTime: number;
        startTime: number;
    };
    slides: IonSlides;
    constructor(modalController: ModalController);
    ngOnInit(): Promise<void>;
    setStyle(): void;
    setScheme(scheme: string): void;
    /**
     * @see http://www.javascriptkit.com/javatutors/touchevents3.shtml
     */
    initSwipeToClose(isActive?: boolean): void;
    swipeStart(event: any): void;
    swipeMove(event: any): void;
    swipeEnd(event: any): void;
    closeModal(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ViewerModalComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ViewerModalComponent, "ion-viewer-modal", never, { "alt": "alt"; "scheme": "scheme"; "slideOptions": "slideOptions"; "srcFallback": "srcFallback"; "srcHighRes": "srcHighRes"; "swipeToClose": "swipeToClose"; "text": "text"; "title": "title"; "titleSize": "titleSize"; "src": "src"; }, {}, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlld2VyLW1vZGFsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ2aWV3ZXItbW9kYWwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNb2RhbENvbnRyb2xsZXIsIElvblNsaWRlcyB9IGZyb20gJ0Bpb25pYy9hbmd1bGFyJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFZpZXdlck1vZGFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIG1vZGFsQ29udHJvbGxlcjtcbiAgICBhbHQ/OiBzdHJpbmc7XG4gICAgc2NoZW1lPzogc3RyaW5nO1xuICAgIHNsaWRlT3B0aW9ucz86IG9iamVjdDtcbiAgICBzcmM6IHN0cmluZztcbiAgICBzcmNGYWxsYmFjaz86IHN0cmluZztcbiAgICBzcmNIaWdoUmVzPzogc3RyaW5nO1xuICAgIHN3aXBlVG9DbG9zZT86IGJvb2xlYW47XG4gICAgdGV4dD86IHN0cmluZztcbiAgICB0aXRsZT86IHN0cmluZztcbiAgICB0aXRsZVNpemU/OiBzdHJpbmc7XG4gICAgZGVmYXVsdFNsaWRlT3B0aW9uczoge1xuICAgICAgICBjZW50ZXJlZFNsaWRlczogYm9vbGVhbjtcbiAgICAgICAgcGFzc2l2ZUxpc3RlbmVyczogYm9vbGVhbjtcbiAgICAgICAgem9vbToge1xuICAgICAgICAgICAgZW5hYmxlZDogYm9vbGVhbjtcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIG9wdGlvbnM6IHt9O1xuICAgIHN3aXBlU3RhdGU6IHtcbiAgICAgICAgcGhhc2U6IHN0cmluZztcbiAgICAgICAgZGlyZWN0aW9uOiBzdHJpbmc7XG4gICAgICAgIHN3aXBlVHlwZTogc3RyaW5nO1xuICAgICAgICBzdGFydFg6IG51bWJlcjtcbiAgICAgICAgc3RhcnRZOiBudW1iZXI7XG4gICAgICAgIGRpc3RhbmNlOiBudW1iZXI7XG4gICAgICAgIGRpc3RhbmNlWDogbnVtYmVyO1xuICAgICAgICBkaXN0YW5jZVk6IG51bWJlcjtcbiAgICAgICAgdGhyZXNob2xkOiBudW1iZXI7XG4gICAgICAgIHJlc3RyYWludDogbnVtYmVyO1xuICAgICAgICBhbGxvd2VkVGltZTogbnVtYmVyO1xuICAgICAgICBlbGFwc2VkVGltZTogbnVtYmVyO1xuICAgICAgICBzdGFydFRpbWU6IG51bWJlcjtcbiAgICB9O1xuICAgIHNsaWRlczogSW9uU2xpZGVzO1xuICAgIGNvbnN0cnVjdG9yKG1vZGFsQ29udHJvbGxlcjogTW9kYWxDb250cm9sbGVyKTtcbiAgICBuZ09uSW5pdCgpOiBQcm9taXNlPHZvaWQ+O1xuICAgIHNldFN0eWxlKCk6IHZvaWQ7XG4gICAgc2V0U2NoZW1lKHNjaGVtZTogc3RyaW5nKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBAc2VlIGh0dHA6Ly93d3cuamF2YXNjcmlwdGtpdC5jb20vamF2YXR1dG9ycy90b3VjaGV2ZW50czMuc2h0bWxcbiAgICAgKi9cbiAgICBpbml0U3dpcGVUb0Nsb3NlKGlzQWN0aXZlPzogYm9vbGVhbik6IHZvaWQ7XG4gICAgc3dpcGVTdGFydChldmVudDogYW55KTogdm9pZDtcbiAgICBzd2lwZU1vdmUoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgc3dpcGVFbmQoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgY2xvc2VNb2RhbCgpOiB2b2lkO1xufVxuIl19